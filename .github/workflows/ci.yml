name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio

    - name: Install MCP servers
      run: |
        npm install -g @modelcontextprotocol/server-filesystem
        npm install -g @modelcontextprotocol/server-git
        npm install -g @modelcontextprotocol/server-shell
        npm install -g @modelcontextprotocol/server-memory

    - name: Lint with pylint
      run: |
        pip install pylint
        pylint cynetics.py || true

    - name: Format check with black
      run: |
        pip install black
        black --check . || true

    - name: Type check with mypy
      run: |
        pip install mypy
        mypy cynetics.py --ignore-missing-imports || true

    - name: Run tests
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t cynetics:test .

    - name: Test Docker image
      run: |
        docker run cynetics:test --help
